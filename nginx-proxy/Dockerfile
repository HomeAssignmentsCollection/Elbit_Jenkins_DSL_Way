# ------------------------------------------------------------------------------
# Custom Docker image for NGINX reverse proxy (Alpine-based)
# - Injects runtime-generated nginx.conf
# - Uses non-root user for better security
# - Adds healthcheck for the /api route
# ------------------------------------------------------------------------------

FROM nginx:1.25-alpine

# Copy the final config (generated by Jenkins stage)
COPY nginx.conf /etc/nginx/nginx.conf

# Create non-root user and fix permissions (commented out for testing)
# RUN addgroup -S appgroup && adduser -S appuser -G appgroup && \
#     mkdir -p /var/cache/nginx /var/run /var/log/nginx && \
#     chown -R appuser:appgroup /var/cache/nginx /var/run /var/log/nginx /etc/nginx && \
#     chmod -R 755 /var/cache/nginx /var/run /var/log/nginx

# Use non-root user for better container security (commented out for testing)
# USER appuser

# Expose proxy port
EXPOSE 80

# Simple healthcheck hitting the proxied /api path
HEALTHCHECK --interval=30s --timeout=5s --start-period=10s --retries=3 \
  CMD wget --spider -q http://localhost/api/ || exit 1

# Run nginx without daemon mode
ENTRYPOINT ["nginx", "-g", "daemon off;"]





# # ------------------------------------------------------------------------------
# # Custom Docker image for Nginx reverse proxy
# # - Uses minimal Alpine-based NGINX image
# # - Injects nginx.conf
# # - Uses non-root user for security
# # - Adds healthcheck for /api route
# # ------------------------------------------------------------------------------

#     FROM nginx:1.25-alpine

#     # Copy custom config
#     COPY nginx.conf /etc/nginx/nginx.conf
    
#     # Create a non-root user and set proper permissions
#     RUN addgroup -S appgroup && adduser -S appuser -G appgroup && \
#         chown -R appuser:appgroup /var/cache/nginx /var/run /var/log/nginx /etc/nginx
    
#     USER appuser
    
#     # Expose proxy port
#     EXPOSE 80
    
#     # Add simple healthcheck for the /api path
#     HEALTHCHECK --interval=30s --timeout=5s --start-period=10s --retries=3 \
#       CMD wget --spider -q http://localhost/api/ || exit 1
    
#     ENTRYPOINT ["nginx", "-g", "daemon off;"]
    
